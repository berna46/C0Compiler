Grammar

    0 $accept: START $end

    1 START: MAIN CB0 INST_L RETURN NUM SEMICOLON CB1

    2 INST_L: SINGLE_INST
    3       | COMMAND INST_L
    4       | DEC INST_L

    5 SINGLE_INST: COMMAND
    6            | DEC

    7 COMMAND: VAR ASSIGN EXP SEMICOLON
    8        | IF P0 EXP P1 SEMICOLON
    9        | IF P0 EXP P1 SINGLE_INST
   10        | IF P0 EXP P1 CB0 INST_L CB1
   11        | IF P0 EXP P1 THEN_STMT ELSE SINGLE_INST
   12        | IF P0 EXP P1 THEN_STMT ELSE CB0 INST_L CB1
   13        | IF P0 EXP P1 CB0 INST_L CB1 ELSE SINGLE_INST
   14        | IF P0 EXP P1 CB0 INST_L CB1 ELSE CB0 INST_L CB1
   15        | WHILE P0 EXP P1 SEMICOLON
   16        | WHILE P0 EXP P1 SINGLE_INST
   17        | WHILE P0 EXP P1 CB0 INST_L CB1

   18 THEN_STMT: VAR ASSIGN EXP SEMICOLON
   19          | DEC
   20          | WHILE P0 EXP P1 SEMICOLON
   21          | WHILE P0 EXP P1 THEN_STMT
   22          | WHILE P0 EXP P1 CB0 INST_L CB1
   23          | IF P0 EXP P1 THEN_STMT ELSE THEN_STMT

   24 EXP: VAR
   25    | NUM
   26    | TRUE
   27    | FALSE
   28    | EXP Plus EXP
   29    | EXP Minus EXP
   30    | EXP Times EXP
   31    | EXP Div EXP
   32    | EXP EQ EXP
   33    | EXP NOTEQ EXP
   34    | EXP G EXP
   35    | EXP GEQ EXP
   36    | EXP L EXP
   37    | EXP LEQ EXP
   38    | EXP OR EXP
   39    | EXP AND EXP
   40    | P0 EXP P1

   41 DEC: INT VAR SEMICOLON
   42    | BOOL VAR SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 1 25
VAR (259) 7 18 24 41 42
SEMICOLON (260) 1 7 8 15 18 20 41 42
P0 (261) 8 9 10 11 12 13 14 15 16 17 20 21 22 23 40
P1 (262) 8 9 10 11 12 13 14 15 16 17 20 21 22 23 40
Plus (263) 28
Minus (264) 29
Times (265) 30
Div (266) 31
EQ (267) 32
G (268) 34
L (269) 36
LEQ (270) 37
GEQ (271) 35
NOTEQ (272) 33
OR (273) 38
AND (274) 39
IF (275) 8 9 10 11 12 13 14 23
ELSE (276) 11 12 13 14 23
WHILE (277) 15 16 17 20 21 22
ASSIGN (278) 7 18
INT (279) 41
BOOL (280) 42
TRUE (281) 26
FALSE (282) 27
MAIN (283) 1
RETURN (284) 1
CB0 (285) 1 10 12 13 14 17 22
CB1 (286) 1 10 12 13 14 17 22


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
START (33)
    on left: 1, on right: 0
INST_L (34)
    on left: 2 3 4, on right: 1 3 4 10 12 13 14 17 22
SINGLE_INST (35)
    on left: 5 6, on right: 2 9 11 13 16
COMMAND (36)
    on left: 7 8 9 10 11 12 13 14 15 16 17, on right: 3 5
THEN_STMT (37)
    on left: 18 19 20 21 22 23, on right: 11 12 21 23
EXP (38)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40, on right:
    7 8 9 10 11 12 13 14 15 16 17 18 20 21 22 23 28 29 30 31 32 33
    34 35 36 37 38 39 40
DEC (39)
    on left: 41 42, on right: 4 6 19


State 0

    0 $accept: . START $end

    MAIN  shift, and go to state 1

    START  go to state 2


State 1

    1 START: MAIN . CB0 INST_L RETURN NUM SEMICOLON CB1

    CB0  shift, and go to state 3


State 2

    0 $accept: START . $end

    $end  shift, and go to state 4


State 3

    1 START: MAIN CB0 . INST_L RETURN NUM SEMICOLON CB1

    VAR    shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    INT    shift, and go to state 8
    BOOL   shift, and go to state 9

    INST_L       go to state 10
    SINGLE_INST  go to state 11
    COMMAND      go to state 12
    DEC          go to state 13


State 4

    0 $accept: START $end .

    $default  accept


State 5

    7 COMMAND: VAR . ASSIGN EXP SEMICOLON

    ASSIGN  shift, and go to state 14


State 6

    8 COMMAND: IF . P0 EXP P1 SEMICOLON
    9        | IF . P0 EXP P1 SINGLE_INST
   10        | IF . P0 EXP P1 CB0 INST_L CB1
   11        | IF . P0 EXP P1 THEN_STMT ELSE SINGLE_INST
   12        | IF . P0 EXP P1 THEN_STMT ELSE CB0 INST_L CB1
   13        | IF . P0 EXP P1 CB0 INST_L CB1 ELSE SINGLE_INST
   14        | IF . P0 EXP P1 CB0 INST_L CB1 ELSE CB0 INST_L CB1

    P0  shift, and go to state 15


State 7

   15 COMMAND: WHILE . P0 EXP P1 SEMICOLON
   16        | WHILE . P0 EXP P1 SINGLE_INST
   17        | WHILE . P0 EXP P1 CB0 INST_L CB1

    P0  shift, and go to state 16


State 8

   41 DEC: INT . VAR SEMICOLON

    VAR  shift, and go to state 17


State 9

   42 DEC: BOOL . VAR SEMICOLON

    VAR  shift, and go to state 18


State 10

    1 START: MAIN CB0 INST_L . RETURN NUM SEMICOLON CB1

    RETURN  shift, and go to state 19


State 11

    2 INST_L: SINGLE_INST .

    $default  reduce using rule 2 (INST_L)


State 12

    3 INST_L: COMMAND . INST_L
    5 SINGLE_INST: COMMAND .

    VAR    shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    INT    shift, and go to state 8
    BOOL   shift, and go to state 9

    $default  reduce using rule 5 (SINGLE_INST)

    INST_L       go to state 20
    SINGLE_INST  go to state 11
    COMMAND      go to state 12
    DEC          go to state 13


State 13

    4 INST_L: DEC . INST_L
    6 SINGLE_INST: DEC .

    VAR    shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    INT    shift, and go to state 8
    BOOL   shift, and go to state 9

    $default  reduce using rule 6 (SINGLE_INST)

    INST_L       go to state 21
    SINGLE_INST  go to state 11
    COMMAND      go to state 12
    DEC          go to state 13


State 14

    7 COMMAND: VAR ASSIGN . EXP SEMICOLON

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 27


State 15

    8 COMMAND: IF P0 . EXP P1 SEMICOLON
    9        | IF P0 . EXP P1 SINGLE_INST
   10        | IF P0 . EXP P1 CB0 INST_L CB1
   11        | IF P0 . EXP P1 THEN_STMT ELSE SINGLE_INST
   12        | IF P0 . EXP P1 THEN_STMT ELSE CB0 INST_L CB1
   13        | IF P0 . EXP P1 CB0 INST_L CB1 ELSE SINGLE_INST
   14        | IF P0 . EXP P1 CB0 INST_L CB1 ELSE CB0 INST_L CB1

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 28


State 16

   15 COMMAND: WHILE P0 . EXP P1 SEMICOLON
   16        | WHILE P0 . EXP P1 SINGLE_INST
   17        | WHILE P0 . EXP P1 CB0 INST_L CB1

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 29


State 17

   41 DEC: INT VAR . SEMICOLON

    SEMICOLON  shift, and go to state 30


State 18

   42 DEC: BOOL VAR . SEMICOLON

    SEMICOLON  shift, and go to state 31


State 19

    1 START: MAIN CB0 INST_L RETURN . NUM SEMICOLON CB1

    NUM  shift, and go to state 32


State 20

    3 INST_L: COMMAND INST_L .

    $default  reduce using rule 3 (INST_L)


State 21

    4 INST_L: DEC INST_L .

    $default  reduce using rule 4 (INST_L)


State 22

   25 EXP: NUM .

    $default  reduce using rule 25 (EXP)


State 23

   24 EXP: VAR .

    $default  reduce using rule 24 (EXP)


State 24

   40 EXP: P0 . EXP P1

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 33


State 25

   26 EXP: TRUE .

    $default  reduce using rule 26 (EXP)


State 26

   27 EXP: FALSE .

    $default  reduce using rule 27 (EXP)


State 27

    7 COMMAND: VAR ASSIGN EXP . SEMICOLON
   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    SEMICOLON  shift, and go to state 34
    Plus       shift, and go to state 35
    Minus      shift, and go to state 36
    Times      shift, and go to state 37
    Div        shift, and go to state 38
    EQ         shift, and go to state 39
    G          shift, and go to state 40
    L          shift, and go to state 41
    LEQ        shift, and go to state 42
    GEQ        shift, and go to state 43
    NOTEQ      shift, and go to state 44
    OR         shift, and go to state 45
    AND        shift, and go to state 46


State 28

    8 COMMAND: IF P0 EXP . P1 SEMICOLON
    9        | IF P0 EXP . P1 SINGLE_INST
   10        | IF P0 EXP . P1 CB0 INST_L CB1
   11        | IF P0 EXP . P1 THEN_STMT ELSE SINGLE_INST
   12        | IF P0 EXP . P1 THEN_STMT ELSE CB0 INST_L CB1
   13        | IF P0 EXP . P1 CB0 INST_L CB1 ELSE SINGLE_INST
   14        | IF P0 EXP . P1 CB0 INST_L CB1 ELSE CB0 INST_L CB1
   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    P1     shift, and go to state 47
    Plus   shift, and go to state 35
    Minus  shift, and go to state 36
    Times  shift, and go to state 37
    Div    shift, and go to state 38
    EQ     shift, and go to state 39
    G      shift, and go to state 40
    L      shift, and go to state 41
    LEQ    shift, and go to state 42
    GEQ    shift, and go to state 43
    NOTEQ  shift, and go to state 44
    OR     shift, and go to state 45
    AND    shift, and go to state 46


State 29

   15 COMMAND: WHILE P0 EXP . P1 SEMICOLON
   16        | WHILE P0 EXP . P1 SINGLE_INST
   17        | WHILE P0 EXP . P1 CB0 INST_L CB1
   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    P1     shift, and go to state 48
    Plus   shift, and go to state 35
    Minus  shift, and go to state 36
    Times  shift, and go to state 37
    Div    shift, and go to state 38
    EQ     shift, and go to state 39
    G      shift, and go to state 40
    L      shift, and go to state 41
    LEQ    shift, and go to state 42
    GEQ    shift, and go to state 43
    NOTEQ  shift, and go to state 44
    OR     shift, and go to state 45
    AND    shift, and go to state 46


State 30

   41 DEC: INT VAR SEMICOLON .

    $default  reduce using rule 41 (DEC)


State 31

   42 DEC: BOOL VAR SEMICOLON .

    $default  reduce using rule 42 (DEC)


State 32

    1 START: MAIN CB0 INST_L RETURN NUM . SEMICOLON CB1

    SEMICOLON  shift, and go to state 49


State 33

   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP
   40    | P0 EXP . P1

    P1     shift, and go to state 50
    Plus   shift, and go to state 35
    Minus  shift, and go to state 36
    Times  shift, and go to state 37
    Div    shift, and go to state 38
    EQ     shift, and go to state 39
    G      shift, and go to state 40
    L      shift, and go to state 41
    LEQ    shift, and go to state 42
    GEQ    shift, and go to state 43
    NOTEQ  shift, and go to state 44
    OR     shift, and go to state 45
    AND    shift, and go to state 46


State 34

    7 COMMAND: VAR ASSIGN EXP SEMICOLON .

    $default  reduce using rule 7 (COMMAND)


State 35

   28 EXP: EXP Plus . EXP

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 51


State 36

   29 EXP: EXP Minus . EXP

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 52


State 37

   30 EXP: EXP Times . EXP

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 53


State 38

   31 EXP: EXP Div . EXP

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 54


State 39

   32 EXP: EXP EQ . EXP

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 55


State 40

   34 EXP: EXP G . EXP

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 56


State 41

   36 EXP: EXP L . EXP

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 57


State 42

   37 EXP: EXP LEQ . EXP

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 58


State 43

   35 EXP: EXP GEQ . EXP

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 59


State 44

   33 EXP: EXP NOTEQ . EXP

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 60


State 45

   38 EXP: EXP OR . EXP

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 61


State 46

   39 EXP: EXP AND . EXP

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 62


State 47

    8 COMMAND: IF P0 EXP P1 . SEMICOLON
    9        | IF P0 EXP P1 . SINGLE_INST
   10        | IF P0 EXP P1 . CB0 INST_L CB1
   11        | IF P0 EXP P1 . THEN_STMT ELSE SINGLE_INST
   12        | IF P0 EXP P1 . THEN_STMT ELSE CB0 INST_L CB1
   13        | IF P0 EXP P1 . CB0 INST_L CB1 ELSE SINGLE_INST
   14        | IF P0 EXP P1 . CB0 INST_L CB1 ELSE CB0 INST_L CB1

    VAR        shift, and go to state 63
    SEMICOLON  shift, and go to state 64
    IF         shift, and go to state 65
    WHILE      shift, and go to state 66
    INT        shift, and go to state 8
    BOOL       shift, and go to state 9
    CB0        shift, and go to state 67

    SINGLE_INST  go to state 68
    COMMAND      go to state 69
    THEN_STMT    go to state 70
    DEC          go to state 71


State 48

   15 COMMAND: WHILE P0 EXP P1 . SEMICOLON
   16        | WHILE P0 EXP P1 . SINGLE_INST
   17        | WHILE P0 EXP P1 . CB0 INST_L CB1

    VAR        shift, and go to state 5
    SEMICOLON  shift, and go to state 72
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7
    INT        shift, and go to state 8
    BOOL       shift, and go to state 9
    CB0        shift, and go to state 73

    SINGLE_INST  go to state 74
    COMMAND      go to state 69
    DEC          go to state 75


State 49

    1 START: MAIN CB0 INST_L RETURN NUM SEMICOLON . CB1

    CB1  shift, and go to state 76


State 50

   40 EXP: P0 EXP P1 .

    $default  reduce using rule 40 (EXP)


State 51

   28 EXP: EXP . Plus EXP
   28    | EXP Plus EXP .
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    Times  shift, and go to state 37
    Div    shift, and go to state 38

    $default  reduce using rule 28 (EXP)


State 52

   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   29    | EXP Minus EXP .
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    Times  shift, and go to state 37
    Div    shift, and go to state 38

    $default  reduce using rule 29 (EXP)


State 53

   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   30    | EXP Times EXP .
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    $default  reduce using rule 30 (EXP)


State 54

   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   31    | EXP Div EXP .
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    $default  reduce using rule 31 (EXP)


State 55

   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   32    | EXP EQ EXP .
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    Plus   shift, and go to state 35
    Minus  shift, and go to state 36
    Times  shift, and go to state 37
    Div    shift, and go to state 38
    OR     shift, and go to state 45
    AND    shift, and go to state 46

    $default  reduce using rule 32 (EXP)


State 56

   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   34    | EXP G EXP .
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    Plus   shift, and go to state 35
    Minus  shift, and go to state 36
    Times  shift, and go to state 37
    Div    shift, and go to state 38
    OR     shift, and go to state 45
    AND    shift, and go to state 46

    $default  reduce using rule 34 (EXP)


State 57

   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   36    | EXP L EXP .
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    Plus   shift, and go to state 35
    Minus  shift, and go to state 36
    Times  shift, and go to state 37
    Div    shift, and go to state 38
    OR     shift, and go to state 45
    AND    shift, and go to state 46

    $default  reduce using rule 36 (EXP)


State 58

   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   37    | EXP LEQ EXP .
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    Plus   shift, and go to state 35
    Minus  shift, and go to state 36
    Times  shift, and go to state 37
    Div    shift, and go to state 38
    OR     shift, and go to state 45
    AND    shift, and go to state 46

    $default  reduce using rule 37 (EXP)


State 59

   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   35    | EXP GEQ EXP .
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    Plus   shift, and go to state 35
    Minus  shift, and go to state 36
    Times  shift, and go to state 37
    Div    shift, and go to state 38
    OR     shift, and go to state 45
    AND    shift, and go to state 46

    $default  reduce using rule 35 (EXP)


State 60

   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   33    | EXP NOTEQ EXP .
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    Plus   shift, and go to state 35
    Minus  shift, and go to state 36
    Times  shift, and go to state 37
    Div    shift, and go to state 38
    OR     shift, and go to state 45
    AND    shift, and go to state 46

    $default  reduce using rule 33 (EXP)


State 61

   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   38    | EXP OR EXP .
   39    | EXP . AND EXP

    Plus   shift, and go to state 35
    Minus  shift, and go to state 36
    Times  shift, and go to state 37
    Div    shift, and go to state 38
    AND    shift, and go to state 46

    $default  reduce using rule 38 (EXP)


State 62

   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP
   39    | EXP AND EXP .

    Plus   shift, and go to state 35
    Minus  shift, and go to state 36
    Times  shift, and go to state 37
    Div    shift, and go to state 38

    $default  reduce using rule 39 (EXP)


State 63

    7 COMMAND: VAR . ASSIGN EXP SEMICOLON
   18 THEN_STMT: VAR . ASSIGN EXP SEMICOLON

    ASSIGN  shift, and go to state 77


State 64

    8 COMMAND: IF P0 EXP P1 SEMICOLON .

    $default  reduce using rule 8 (COMMAND)


State 65

    8 COMMAND: IF . P0 EXP P1 SEMICOLON
    9        | IF . P0 EXP P1 SINGLE_INST
   10        | IF . P0 EXP P1 CB0 INST_L CB1
   11        | IF . P0 EXP P1 THEN_STMT ELSE SINGLE_INST
   12        | IF . P0 EXP P1 THEN_STMT ELSE CB0 INST_L CB1
   13        | IF . P0 EXP P1 CB0 INST_L CB1 ELSE SINGLE_INST
   14        | IF . P0 EXP P1 CB0 INST_L CB1 ELSE CB0 INST_L CB1
   23 THEN_STMT: IF . P0 EXP P1 THEN_STMT ELSE THEN_STMT

    P0  shift, and go to state 78


State 66

   15 COMMAND: WHILE . P0 EXP P1 SEMICOLON
   16        | WHILE . P0 EXP P1 SINGLE_INST
   17        | WHILE . P0 EXP P1 CB0 INST_L CB1
   20 THEN_STMT: WHILE . P0 EXP P1 SEMICOLON
   21          | WHILE . P0 EXP P1 THEN_STMT
   22          | WHILE . P0 EXP P1 CB0 INST_L CB1

    P0  shift, and go to state 79


State 67

   10 COMMAND: IF P0 EXP P1 CB0 . INST_L CB1
   13        | IF P0 EXP P1 CB0 . INST_L CB1 ELSE SINGLE_INST
   14        | IF P0 EXP P1 CB0 . INST_L CB1 ELSE CB0 INST_L CB1

    VAR    shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    INT    shift, and go to state 8
    BOOL   shift, and go to state 9

    INST_L       go to state 80
    SINGLE_INST  go to state 11
    COMMAND      go to state 12
    DEC          go to state 13


State 68

    9 COMMAND: IF P0 EXP P1 SINGLE_INST .

    $default  reduce using rule 9 (COMMAND)


State 69

    5 SINGLE_INST: COMMAND .

    $default  reduce using rule 5 (SINGLE_INST)


State 70

   11 COMMAND: IF P0 EXP P1 THEN_STMT . ELSE SINGLE_INST
   12        | IF P0 EXP P1 THEN_STMT . ELSE CB0 INST_L CB1

    ELSE  shift, and go to state 81


State 71

    6 SINGLE_INST: DEC .
   19 THEN_STMT: DEC .

    ELSE      reduce using rule 19 (THEN_STMT)
    $default  reduce using rule 6 (SINGLE_INST)


State 72

   15 COMMAND: WHILE P0 EXP P1 SEMICOLON .

    $default  reduce using rule 15 (COMMAND)


State 73

   17 COMMAND: WHILE P0 EXP P1 CB0 . INST_L CB1

    VAR    shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    INT    shift, and go to state 8
    BOOL   shift, and go to state 9

    INST_L       go to state 82
    SINGLE_INST  go to state 11
    COMMAND      go to state 12
    DEC          go to state 13


State 74

   16 COMMAND: WHILE P0 EXP P1 SINGLE_INST .

    $default  reduce using rule 16 (COMMAND)


State 75

    6 SINGLE_INST: DEC .

    $default  reduce using rule 6 (SINGLE_INST)


State 76

    1 START: MAIN CB0 INST_L RETURN NUM SEMICOLON CB1 .

    $default  reduce using rule 1 (START)


State 77

    7 COMMAND: VAR ASSIGN . EXP SEMICOLON
   18 THEN_STMT: VAR ASSIGN . EXP SEMICOLON

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 83


State 78

    8 COMMAND: IF P0 . EXP P1 SEMICOLON
    9        | IF P0 . EXP P1 SINGLE_INST
   10        | IF P0 . EXP P1 CB0 INST_L CB1
   11        | IF P0 . EXP P1 THEN_STMT ELSE SINGLE_INST
   12        | IF P0 . EXP P1 THEN_STMT ELSE CB0 INST_L CB1
   13        | IF P0 . EXP P1 CB0 INST_L CB1 ELSE SINGLE_INST
   14        | IF P0 . EXP P1 CB0 INST_L CB1 ELSE CB0 INST_L CB1
   23 THEN_STMT: IF P0 . EXP P1 THEN_STMT ELSE THEN_STMT

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 84


State 79

   15 COMMAND: WHILE P0 . EXP P1 SEMICOLON
   16        | WHILE P0 . EXP P1 SINGLE_INST
   17        | WHILE P0 . EXP P1 CB0 INST_L CB1
   20 THEN_STMT: WHILE P0 . EXP P1 SEMICOLON
   21          | WHILE P0 . EXP P1 THEN_STMT
   22          | WHILE P0 . EXP P1 CB0 INST_L CB1

    NUM    shift, and go to state 22
    VAR    shift, and go to state 23
    P0     shift, and go to state 24
    TRUE   shift, and go to state 25
    FALSE  shift, and go to state 26

    EXP  go to state 85


State 80

   10 COMMAND: IF P0 EXP P1 CB0 INST_L . CB1
   13        | IF P0 EXP P1 CB0 INST_L . CB1 ELSE SINGLE_INST
   14        | IF P0 EXP P1 CB0 INST_L . CB1 ELSE CB0 INST_L CB1

    CB1  shift, and go to state 86


State 81

   11 COMMAND: IF P0 EXP P1 THEN_STMT ELSE . SINGLE_INST
   12        | IF P0 EXP P1 THEN_STMT ELSE . CB0 INST_L CB1

    VAR    shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    INT    shift, and go to state 8
    BOOL   shift, and go to state 9
    CB0    shift, and go to state 87

    SINGLE_INST  go to state 88
    COMMAND      go to state 69
    DEC          go to state 75


State 82

   17 COMMAND: WHILE P0 EXP P1 CB0 INST_L . CB1

    CB1  shift, and go to state 89


State 83

    7 COMMAND: VAR ASSIGN EXP . SEMICOLON
   18 THEN_STMT: VAR ASSIGN EXP . SEMICOLON
   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    SEMICOLON  shift, and go to state 90
    Plus       shift, and go to state 35
    Minus      shift, and go to state 36
    Times      shift, and go to state 37
    Div        shift, and go to state 38
    EQ         shift, and go to state 39
    G          shift, and go to state 40
    L          shift, and go to state 41
    LEQ        shift, and go to state 42
    GEQ        shift, and go to state 43
    NOTEQ      shift, and go to state 44
    OR         shift, and go to state 45
    AND        shift, and go to state 46


State 84

    8 COMMAND: IF P0 EXP . P1 SEMICOLON
    9        | IF P0 EXP . P1 SINGLE_INST
   10        | IF P0 EXP . P1 CB0 INST_L CB1
   11        | IF P0 EXP . P1 THEN_STMT ELSE SINGLE_INST
   12        | IF P0 EXP . P1 THEN_STMT ELSE CB0 INST_L CB1
   13        | IF P0 EXP . P1 CB0 INST_L CB1 ELSE SINGLE_INST
   14        | IF P0 EXP . P1 CB0 INST_L CB1 ELSE CB0 INST_L CB1
   23 THEN_STMT: IF P0 EXP . P1 THEN_STMT ELSE THEN_STMT
   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    P1     shift, and go to state 91
    Plus   shift, and go to state 35
    Minus  shift, and go to state 36
    Times  shift, and go to state 37
    Div    shift, and go to state 38
    EQ     shift, and go to state 39
    G      shift, and go to state 40
    L      shift, and go to state 41
    LEQ    shift, and go to state 42
    GEQ    shift, and go to state 43
    NOTEQ  shift, and go to state 44
    OR     shift, and go to state 45
    AND    shift, and go to state 46


State 85

   15 COMMAND: WHILE P0 EXP . P1 SEMICOLON
   16        | WHILE P0 EXP . P1 SINGLE_INST
   17        | WHILE P0 EXP . P1 CB0 INST_L CB1
   20 THEN_STMT: WHILE P0 EXP . P1 SEMICOLON
   21          | WHILE P0 EXP . P1 THEN_STMT
   22          | WHILE P0 EXP . P1 CB0 INST_L CB1
   28 EXP: EXP . Plus EXP
   29    | EXP . Minus EXP
   30    | EXP . Times EXP
   31    | EXP . Div EXP
   32    | EXP . EQ EXP
   33    | EXP . NOTEQ EXP
   34    | EXP . G EXP
   35    | EXP . GEQ EXP
   36    | EXP . L EXP
   37    | EXP . LEQ EXP
   38    | EXP . OR EXP
   39    | EXP . AND EXP

    P1     shift, and go to state 92
    Plus   shift, and go to state 35
    Minus  shift, and go to state 36
    Times  shift, and go to state 37
    Div    shift, and go to state 38
    EQ     shift, and go to state 39
    G      shift, and go to state 40
    L      shift, and go to state 41
    LEQ    shift, and go to state 42
    GEQ    shift, and go to state 43
    NOTEQ  shift, and go to state 44
    OR     shift, and go to state 45
    AND    shift, and go to state 46


State 86

   10 COMMAND: IF P0 EXP P1 CB0 INST_L CB1 .
   13        | IF P0 EXP P1 CB0 INST_L CB1 . ELSE SINGLE_INST
   14        | IF P0 EXP P1 CB0 INST_L CB1 . ELSE CB0 INST_L CB1

    ELSE  shift, and go to state 93

    $default  reduce using rule 10 (COMMAND)


State 87

   12 COMMAND: IF P0 EXP P1 THEN_STMT ELSE CB0 . INST_L CB1

    VAR    shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    INT    shift, and go to state 8
    BOOL   shift, and go to state 9

    INST_L       go to state 94
    SINGLE_INST  go to state 11
    COMMAND      go to state 12
    DEC          go to state 13


State 88

   11 COMMAND: IF P0 EXP P1 THEN_STMT ELSE SINGLE_INST .

    $default  reduce using rule 11 (COMMAND)


State 89

   17 COMMAND: WHILE P0 EXP P1 CB0 INST_L CB1 .

    $default  reduce using rule 17 (COMMAND)


State 90

    7 COMMAND: VAR ASSIGN EXP SEMICOLON .
   18 THEN_STMT: VAR ASSIGN EXP SEMICOLON .

    ELSE      reduce using rule 18 (THEN_STMT)
    $default  reduce using rule 7 (COMMAND)


State 91

    8 COMMAND: IF P0 EXP P1 . SEMICOLON
    9        | IF P0 EXP P1 . SINGLE_INST
   10        | IF P0 EXP P1 . CB0 INST_L CB1
   11        | IF P0 EXP P1 . THEN_STMT ELSE SINGLE_INST
   12        | IF P0 EXP P1 . THEN_STMT ELSE CB0 INST_L CB1
   13        | IF P0 EXP P1 . CB0 INST_L CB1 ELSE SINGLE_INST
   14        | IF P0 EXP P1 . CB0 INST_L CB1 ELSE CB0 INST_L CB1
   23 THEN_STMT: IF P0 EXP P1 . THEN_STMT ELSE THEN_STMT

    VAR        shift, and go to state 63
    SEMICOLON  shift, and go to state 64
    IF         shift, and go to state 65
    WHILE      shift, and go to state 66
    INT        shift, and go to state 8
    BOOL       shift, and go to state 9
    CB0        shift, and go to state 67

    SINGLE_INST  go to state 68
    COMMAND      go to state 69
    THEN_STMT    go to state 95
    DEC          go to state 71


State 92

   15 COMMAND: WHILE P0 EXP P1 . SEMICOLON
   16        | WHILE P0 EXP P1 . SINGLE_INST
   17        | WHILE P0 EXP P1 . CB0 INST_L CB1
   20 THEN_STMT: WHILE P0 EXP P1 . SEMICOLON
   21          | WHILE P0 EXP P1 . THEN_STMT
   22          | WHILE P0 EXP P1 . CB0 INST_L CB1

    VAR        shift, and go to state 63
    SEMICOLON  shift, and go to state 96
    IF         shift, and go to state 65
    WHILE      shift, and go to state 66
    INT        shift, and go to state 8
    BOOL       shift, and go to state 9
    CB0        shift, and go to state 97

    SINGLE_INST  go to state 74
    COMMAND      go to state 69
    THEN_STMT    go to state 98
    DEC          go to state 71


State 93

   13 COMMAND: IF P0 EXP P1 CB0 INST_L CB1 ELSE . SINGLE_INST
   14        | IF P0 EXP P1 CB0 INST_L CB1 ELSE . CB0 INST_L CB1

    VAR    shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    INT    shift, and go to state 8
    BOOL   shift, and go to state 9
    CB0    shift, and go to state 99

    SINGLE_INST  go to state 100
    COMMAND      go to state 69
    DEC          go to state 75


State 94

   12 COMMAND: IF P0 EXP P1 THEN_STMT ELSE CB0 INST_L . CB1

    CB1  shift, and go to state 101


State 95

   11 COMMAND: IF P0 EXP P1 THEN_STMT . ELSE SINGLE_INST
   12        | IF P0 EXP P1 THEN_STMT . ELSE CB0 INST_L CB1
   23 THEN_STMT: IF P0 EXP P1 THEN_STMT . ELSE THEN_STMT

    ELSE  shift, and go to state 102


State 96

   15 COMMAND: WHILE P0 EXP P1 SEMICOLON .
   20 THEN_STMT: WHILE P0 EXP P1 SEMICOLON .

    ELSE      reduce using rule 20 (THEN_STMT)
    $default  reduce using rule 15 (COMMAND)


State 97

   17 COMMAND: WHILE P0 EXP P1 CB0 . INST_L CB1
   22 THEN_STMT: WHILE P0 EXP P1 CB0 . INST_L CB1

    VAR    shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    INT    shift, and go to state 8
    BOOL   shift, and go to state 9

    INST_L       go to state 103
    SINGLE_INST  go to state 11
    COMMAND      go to state 12
    DEC          go to state 13


State 98

   21 THEN_STMT: WHILE P0 EXP P1 THEN_STMT .

    $default  reduce using rule 21 (THEN_STMT)


State 99

   14 COMMAND: IF P0 EXP P1 CB0 INST_L CB1 ELSE CB0 . INST_L CB1

    VAR    shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    INT    shift, and go to state 8
    BOOL   shift, and go to state 9

    INST_L       go to state 104
    SINGLE_INST  go to state 11
    COMMAND      go to state 12
    DEC          go to state 13


State 100

   13 COMMAND: IF P0 EXP P1 CB0 INST_L CB1 ELSE SINGLE_INST .

    $default  reduce using rule 13 (COMMAND)


State 101

   12 COMMAND: IF P0 EXP P1 THEN_STMT ELSE CB0 INST_L CB1 .

    $default  reduce using rule 12 (COMMAND)


State 102

   11 COMMAND: IF P0 EXP P1 THEN_STMT ELSE . SINGLE_INST
   12        | IF P0 EXP P1 THEN_STMT ELSE . CB0 INST_L CB1
   23 THEN_STMT: IF P0 EXP P1 THEN_STMT ELSE . THEN_STMT

    VAR    shift, and go to state 63
    IF     shift, and go to state 65
    WHILE  shift, and go to state 66
    INT    shift, and go to state 8
    BOOL   shift, and go to state 9
    CB0    shift, and go to state 87

    SINGLE_INST  go to state 88
    COMMAND      go to state 69
    THEN_STMT    go to state 105
    DEC          go to state 71


State 103

   17 COMMAND: WHILE P0 EXP P1 CB0 INST_L . CB1
   22 THEN_STMT: WHILE P0 EXP P1 CB0 INST_L . CB1

    CB1  shift, and go to state 106


State 104

   14 COMMAND: IF P0 EXP P1 CB0 INST_L CB1 ELSE CB0 INST_L . CB1

    CB1  shift, and go to state 107


State 105

   23 THEN_STMT: IF P0 EXP P1 THEN_STMT ELSE THEN_STMT .

    $default  reduce using rule 23 (THEN_STMT)


State 106

   17 COMMAND: WHILE P0 EXP P1 CB0 INST_L CB1 .
   22 THEN_STMT: WHILE P0 EXP P1 CB0 INST_L CB1 .

    ELSE      reduce using rule 22 (THEN_STMT)
    $default  reduce using rule 17 (COMMAND)


State 107

   14 COMMAND: IF P0 EXP P1 CB0 INST_L CB1 ELSE CB0 INST_L CB1 .

    $default  reduce using rule 14 (COMMAND)
